window.addEventListener("load", function (a) {
    var c = window.setTimeout;
    window.setTimeout = function (a, d) {
        if ("function" == typeof a) {
            var f = Array.prototype.slice.call(arguments, 2);
            return c(function () {
                a.apply(null, f)
            }, d)
        }
        return c(a, d)
    };
    setTimeout(function () {
        ddz.startup({container: document.getElementById("game")})
    }, 10)
});
ddz = {container: null, width: 0, height: 0, left: 0, top: 0, loader: null, canvas: null, conntext: null, stage: null, bgCanvas: null, bgContext: null, players: [], user: null, dizhu: null, menu: null, playerStage: null, pokerStage: null, controlStage: null, gambleBtns: null, controlBtns: null, playTween: !0, bgSound: null, startup: function (a) {
    this.params = a;
    this.removeNavBar();
    this.detectBrowser();
    this.container = a.container || document.body;
    this.container.style.backgroundColor = this.isAndroid ? "#5522A1" : "#5522A1";
    this.container.style.width = window.innerWidth +
        "px";
    this.container.style.height = window.innerHeight + "px";
    this.container.ontouchstart = function () {
        ddz.removeNavBar();
        event.preventDefault()
    };
    this.isMobile && (document.body.style.WebkitTouchCallout = "none", document.body.style.WebkitUserSelect = "none", document.body.style.WebkitTextSizeAdjust = "none", document.body.style.WebkitTapHighlightColor = "rgba(0,0,0,0)");
    a = document.createElement("div");
    a.style.position = "absolute";
    a.style.width = (550 < window.innerWidth ? 480 : window.innerWidth) + "px";
    a.style.left = "0px";
    a.style.top = (0.35 * (400 < window.innerHeight ? 320 : window.innerHeight) >> 0) + "px";
    a.style.textAlign = "center";
    a.style.color = this.isAndroid ? "#fff" : "#333";
    a.style.font = this.isMobile ? "bold 16px 黑体" : "bold 16px 宋体";
    a.style.textShadow = this.isAndroid ? "0 2px 2px #111" : "0 2px 2px #ccc";
    this.container.appendChild(a);
    this.loader = a;
    document.createElement("canvas").getContext ? (a = new ImageLoader, a.addEventListener("loaded", casual.delegate(this.onLoad, this)), a.addEventListener("complete", casual.delegate(this.onComplete, this)), a.load(R.sources),
        this.showProgress(0, a.getTotalSize(), R.sources[0].src)) : a.innerHTML = "对不起，游戏无法运行。<br>请用支持Canvas的浏览器。"
}, onLoad: function (a) {
    this.showProgress(a.target.getLoadedSize(), a.target.getTotalSize(), a.image.src)
}, showProgress: function (a, c, b) {
    this.loader.innerHTML = "正在加载资源中，请稍候...<br>";
    this.loader.innerHTML += "(" + Math.round(a / c * 100) + "%)"
}, onComplete: function (a) {
    a.target.removeEventListener("loaded", this.onLoad);
    a.target.removeEventListener("complete", this.onComplete);
    this.container.removeChild(this.loader);
    this.loader =
        null;
    R.init(a.images);
    this.adjustOrientation();
    this.supportOrient && 0 == window.orientation % 180 ? this.showPortraitNotice(!0) : this.initGame()
}, initGame: function () {
    this.winW = window.innerWidth;
    this.winH = window.innerHeight;
    this.width = this.params.width || 480;
    this.height = this.params.height || (this.winH > this.winW ? Math.min(this.winW - 18, 320) : Math.min(this.winH + 2, 320));
    this.left = this.params.left || (550 > this.winW && 480 < this.winW && this.isMobile ? this.winW - 480 >> 1 : 0);
    this.top = this.params.top || (400 > this.winH && 320 < this.winH &&
        this.isMobile ? this.winH - 320 >> 1 : 0);
    trace("GameSize:", this.winW, this.winH, this.width, this.height, this.left, this.top);
    this.bgCanvas = this.createCanvas("bg");
    this.bgContext = this.bgCanvas.getContext("2d");
    this.container.appendChild(this.bgCanvas);
    var a = this.createCanvas("player");
    this.playerStage = new Stage(a.getContext("2d"));
    this.playerStage.setFrameRate(0);
    this.playerStage.usePixelTrace = !1;
    this.container.appendChild(a);
    a.ontouchstart = function () {
        ddz.removeNavBar()
    };
    UI.init();
    this.showMenu()
}, setBackground: function (a) {
    var c =
        this.bgContext;
    c.clearRect(0, 0, this.width, this.height);
    c.drawImage(a, 0, this.height < a.height ? a.height - this.height >> 1 : 0, this.width, this.height, 0, 0, this.width, this.height)
}, showMenu: function () {
    this.menu || (this.menu = new Menu, this.menu.spBtn.onMouseUp = function (a) {
        this.fastClear();
        this.stage = null;
        ddz.initSingleGame()
    });
    this.setBackground(R.startbg);
    this.playerStage.removeAllChildren();
    this.playerStage.addChild(this.menu)
}, selectSingleGame: function () {
    var a = this;
    TweenUtil.to(this.bgContext, this.playTween ?
        200 : 0, {globalAlpha: 0.5, onUpdate: function () {
        a.bgContext.fillStyle = "rgba(0,0,0," + this.count / this.total + ")";
        a.bgContext.fillRect(0, 0, a.width, a.height)
    }, onComplete: function () {
        a.initSingleGame()
    }})
}, createCanvas: function (a, c) {
    var b = document.createElement("canvas");
    a && (b.id = a);
    c || (c = {});
    b.width = c.width || this.width;
    b.height = c.height || this.height;
    b.style.position = "absolute";
    b.style.left = this.left + (c.left || 0) + "px";
    b.style.top = this.top + (c.top || 0) + "px";
    b.oncontextmenu = function () {
        return!1
    };
    return b
}, adjustOrientation: function () {
    this.supportOrient &&
    (window.onorientationchange = function (a) {
        ddz.removeNavBar();
        switch (window.orientation) {
            case 0:
            case 180:
                ddz.showPortraitNotice(!0);
                break;
            case 90:
            case -90:
                ddz.showPortraitNotice(!1), ddz.bgCanvas || ddz.initGame()
        }
    })
}, showPortraitNotice: function (a) {
    this.container.style.display = a ? "none" : "block";
    var c = document.getElementById("msg");
    c.style.display = a ? "block" : "none";
    var b = window.innerWidth, d = window.innerHeight;
    ddz.container.style.width = b + "px";
    ddz.container.style.height = d + "px";
    a && (b > d && (d = b = d), c.style.width =
        b + "px", c.style.height = d + "px", c.ontouchstart = function () {
        ddz.removeNavBar();
        event.preventDefault()
    })
}, playBgSound: function () {
    if ("undefined" == typeof Audio)trace("The browser does not support Audio"); else {
        var a = new Audio(R.soundPath + (this.isFirefox ? R.bgSound[1] : R.bgSound[0]));
        a.autoPlay = !0;
        a.play();
        a.addEventListener("ended", function () {
            a.play()
        }, !1);
        this.bgSound = a
    }
}, removeNavBar: function () {
    window.scrollTo(0, 1)
}, detectBrowser: function () {
    this.ua = navigator.userAgent;
    this.isIE = /msie/i.test(this.ua);
    this.isFirefox =
        /firefox/i.test(this.ua);
    this.isChrome = /chrome/i.test(this.ua);
    this.isSafari = /safari/i.test(this.ua) && !this.isChrome;
    this.isMobile = /mobile/i.test(this.ua);
    this.isIOS = /ios/i.test(this.ua);
    this.isIpad = /ipad/i.test(this.ua);
    this.isIpod = /ipod/i.test(this.ua);
    this.isIphone = /iphone/i.test(this.ua) && !this.isIpod;
    this.isAndroid = /android/i.test(this.ua);
    this.supportStorage = void 0 != window.localStorage;
    this.supportOrient = "orientation"in window
}};
DisplayObject.prototype.fastRender = function (a, c, b) {
    var d = this.getStage();
    if (d) {
        var f = this.getRect(d);
        f.x = Math.floor(this.oldx || f.x) - this.regX;
        f.y = Math.floor(this.oldy || f.y) - this.regY;
        f.width++;
        f.height++;
        void 0 != this.oldx && (this.oldx = this.x);
        void 0 != this.oldy && (this.oldy = this.y);
        d.context.clearRect(f.x, f.y, f.width, f.height);
        this._render.call(this, a, c, b)
    }
};
DisplayObject.prototype.fastClear = function (a, c) {
    var b = this.getStage();
    b && (a || (a = this.getRect(b), a.x = Math.floor(this.oldx || a.x) - this.regX, a.y = Math.floor(this.oldy || a.y) - this.regY, a.width++, a.height++), b.context.clearRect(a.x, a.y, a.width, a.height), !c && this.parent && this.parent.removeChild(this))
};
ddz.grayscale = function (a, c) {
    var b = a.width, d = a.height;
    c && (b = c[2], d = c[3]);
    var f = this.createCanvas(null, {width: b, height: d}), e = f.getContext("2d");
    if (a instanceof DisplayObject) {
        var g = new Stage(e);
        g.setFrameRate(0);
        clearInterval(g.__intervalID);
        g.addChild(a);
        a.fastRender(e);
        g.removeChild(a)
    } else e.drawImage(a, c[0], c[1], c[2], c[3], 0, 0, b, d);
    for (var b = e.getImageData(0, 0, b, d), d = b.data, g = 0, h = d.length; g < h; g += 4) {
        var k = (d[g] + d[g + 1] + d[g + 2]) / 3;
        d[g] = k;
        d[g + 1] = k;
        d[g + 2] = k
    }
    e.putImageData(b, 0, 0);
    return f
};
ddz.showMeMagicPokers = function (a, c) {
    for (var b = Poker.shuffle(Poker.newPack()), d = [], f = 0; f < c.length; f++) {
        var e = c[f];
        "S" == e ? e = 10 : "J" == e ? e = 11 : "Q" == e ? e = 12 : "K" == e ? e = 13 : "A" == e ? e = 14 : "2" == e ? e = 15 : "w" == e ? e = 16 : "W" == e && (e = 17);
        for (var e = Number(e), g = 0; g < b.length; g++) {
            var h = b[g];
            if (h.point == e) {
                d.push(h);
                b.splice(g, 1);
                break
            }
        }
    }
    f = Array.prototype.splice;
    0 == a ? d = d.concat(b) : 1 == a ? (f.apply(b, [17, 0].concat(d)), d = b) : 2 == a && (f.apply(b, [34, 0].concat(d)), d = b);
    return d
};
